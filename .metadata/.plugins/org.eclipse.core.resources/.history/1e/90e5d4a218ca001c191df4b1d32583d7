package com.springboot.support.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.springboot.support.entities.Comments;
import com.springboot.support.services.CommentService;
/**
 * Rest controller for comment.
 * Its contains the method for calling the service methods.
 * @author Soham Banerjee
 *
 */
@RestController
@RequestMapping("/comment")
public class CommentController {
	
	@Autowired
	CommentService commentservice;
	/**
	 * Request mapping creates a URL for the methods.
	 * Its a Post method.
	 * It invokes the createCommentUser service method.
	 * @param ticid hold the ticket id.
	 * @param usrid holds the user id.
	 * @param comments hold the comment details.
	 * @return String value for acknowledgement or error if any.
	 */
	@RequestMapping(value="/createcommentusr", method = RequestMethod.POST,consumes = "application/json", produces = "application/json")
	public String createComment(@RequestParam int ticid,@RequestParam int usrid,  @RequestBody Comments comments) {
		
		return commentservice.createCommentUser(ticid,usrid,comments);
	}
	/**
	 * Request mapping creates a URL for the methods.
	 * Its a Post method.
	 * It invokes the createCommentAdmin service method.
	 * @param ticid holds the ticket id.
	 * @param adminid hold the admin id.
	 * @param comments holds the comments details.
	 * @return
	 */
	@RequestMapping(value="/createcommentadmin", method = RequestMethod.POST,consumes = "application/json", produces = "application/json")
	public String createCommentAdmin(@RequestParam int ticid,@RequestParam int adminid,  @RequestBody Comments comments) {
		
		return commentservice.createCommentAdmin(ticid,adminid,comments);
	}

	/**
	 * Request mapping creates a URL for the methods.
	 * Its a Get method.
	 * Method for invoking viewAllComment service method.
	 * 
	 * @return list of comments.
	 */
	@RequestMapping(value="/viewallcomment", method = RequestMethod.GET)
	public List<Comments> viewComments() {
		
		return commentservice.viewAllComment();
	}
	/**
	 * Request mapping creates a URL for the methods.
	 * Its a Put method.
	 * Method for invoking viewCommentInfo service method.
	 * @param ticid
	 * @param usrid
	 * @return
	 */
	@RequestMapping(value="/viewcomment", method = RequestMethod.GET,consumes = "application/json", produces = "application/json")
	public Comments viewComment(@RequestParam int ticid,@RequestParam int usrid) {
		
		return commentservice.viewCommentInfo(ticid,usrid);
	}
	
	

}
