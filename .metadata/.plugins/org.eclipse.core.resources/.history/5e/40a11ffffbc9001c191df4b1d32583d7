package com.springboot.support.controllers;


import java.util.List;
import java.util.Optional;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.HttpClientErrorException.NotFound;

import com.springboot.support.customdetailshow.ViewAllTicketsDetails;

import com.springboot.support.entities.Tickets;
import com.springboot.support.serviceimpl.NoDataFoundException;
import com.springboot.support.serviceimpl.TicketServiceImpl;




@RestController
@RequestMapping("/tickets")
public class TicketsController {
	
	@Autowired
	TicketServiceImpl tickservimpl;
	
	@RequestMapping(value="/createticket", method=RequestMethod.POST, consumes = "application/json", produces = "application/json")
	public String crtTicket(@RequestBody Tickets tick, @RequestParam int usrid) {
		
		return tickservimpl.createTicket(tick, usrid);
	}
	
	@RequestMapping(value="/viewadmintickets", method=RequestMethod.GET)
	public ResponseEntity<?> viewAdmTickets() throws NoDataFoundException{
		
		List<ViewAllTicketsDetails> list= tickservimpl.viewAdmTicketList();
		
		if(list==null) {
			return new ResponseEntity<>("No ticket created yet..!", HttpStatus.NOT_FOUND);
		}
		
		return ResponseEntity.of(Optional.of(list));
	}
	
	@RequestMapping(value="/viewusertickets", method=RequestMethod.GET)
	public ResponseEntity<?> viewUsrTickets(@RequestParam int usrid)throws NoDataFoundException{
		
        List<ViewAllTicketsDetails> list= tickservimpl.viewUsrTicketList(usrid);
		
		if(list==null) {
			return new ResponseEntity<>("No ticket created yet..!", HttpStatus.NOT_FOUND);
		}
		
		return ResponseEntity.of(Optional.of(list));
	}
	
	@RequestMapping(value="/viewticketsbyid", method=RequestMethod.GET)
	public Object viewTicketbyId(@RequestParam int id){
		
		return tickservimpl.viewTicketById(id);
	}
	
	@RequestMapping(value="/updateassignee", method=RequestMethod.PUT)
	public String updateTicketAssignee(@RequestParam int ticid,@RequestParam int adminid, @RequestParam int assignee){
		
		return tickservimpl.updateAssignee(ticid,adminid,assignee);
	}

	@RequestMapping(value="/updatestatus", method=RequestMethod.PUT)
	public String updateStatus(@RequestParam int  ticketid,@RequestParam int userid, @RequestParam int status) {
		
		return tickservimpl.updateStatus(ticketid,userid,status);
	}
	



	
	
	


	
	
}
